#! /bin/sh

#-- scratchpad --#
# A togglable scratchpad
# Once ran, it will move the focused window into the scratchpad.
# Running it again brings back the window.
# Killing the window will free the scratchpad so a new window can be added!
# Dependencies:
#	- xdotool
#	- bspwm
# ~ ADIGEN


# Cache the pid of the current window on the scratchpad
cache_file="$HOME/.cache/scratchpad"
focus_after_toggle="true"
notifier="dunstify"

# If an executable was passed, throw that into the scratchpad by running it first
#if [ $# != 0 ]; then
#	$@ &
#	echo `sleep 3; xdotool search --pid $! | head -1` > ${cache_file}
#	exec $0
#	exit
#fi

cat ${cache_file} > /dev/null
# If file doesn't exist, then make one
if [ $? -ne 0 ]; then
	echo `xdotool getactivewindow` > ${cache_file}
fi

id=`cat ${cache_file} | head -1`

echo $id

# Toggle hide, set it to be on top of all windows, on the focused monitor.
bspc node "${id}" --flag hidden --flag sticky=on

# Check if the previous command worked properly
if [ $? -eq 0 ]; then
	# These are commands don't work at times for eg. when no window is on screen
	# If yes, focus on it regardless of being hidden (makes code simpler)
	${focus_after_toggle} && bspc node ${id} --focus
	# Set it to be floating
	#bspc node ${id} -t floating
else
	# If it failed due to invalid pid, means that the window was exited
	# Delete the cache file and move the current focused window into scratchpad
	rm ${cache_file}
	${notifier} "No window in scratchpad"
fi
